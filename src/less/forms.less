// Input, Textarea, select

.input,
.textarea,
.select > select {
  display: block;
  border: @border-width solid @input-border-color;
  line-height: @line-height-base;
  padding: @padding-small-vertical @padding-small-horizontal;
  width: 100%;
  background-color: @color-back;
  -webkit-appearance: none;
  border-radius: 0; // reset safari style

  &:focus {
    border-color: @color-focus;
    outline: none;
  }

  &[disabled], .disabled {background-color: darken(@color-back, 10%);}
}

.select {
  position: relative;

  > select {
    
    outline: none;

    &:not([multiple]) {padding-right: 2rem;}

    &[multiple] {
      max-height: 7.5rem;
      overflow-y: auto;
    }
  }

  &:not(.multiple):after {
    content: ' ';
    display: block;
    position: absolute;
    right: 1rem;
    top: 1.2rem;
    width: 0;
    height: 0;
    border-style: solid;
    border-width: .7rem .5rem 0 .5rem;
    border-color: @input-border-color transparent transparent transparent;
  }
}


// Help text

.help-text {
  font-size: @font-size-small;
  color: @color-gray;
  padding: @padding-small-vertical 0;

  &:empty {display: none}
}


// Radio and checkbox

.radio,
.checkbox {
  position: relative;

  > input {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    z-index: 1;
  }

  > input + label {
    position: relative;
    z-index: 0;
    padding: @padding-small-vertical 0 @padding-small-vertical 2.5rem;
    display: block;

    &:before,
    &:after {
      content: ' ';
      display: flex;
      position: absolute;
      left: 0;
      top: @padding-small-vertical + 0.1rem;
      height: 1.8rem;
      width: 1.8rem;
      align-items: center;
      justify-content: center;
      color: transparent;
      border: @border-width * 2 solid @input-border-color;
      .transition-fast();
    }
  }

  > input + label:after {
    opacity: 0;
    transform: scale(0);
    color: @color-gray;
  }

  > input:focus + label:before {border-color: @color-primary;}

  > input:checked + label:after {
    opacity: 1;
    transform: scale(1);
  }

  > input[disabled], > input.disabled {
    opacity: 0!important;

    + label {opacity: @state-disabled-opacity;}
  }

  &.inline-block + .inline-block {
    margin-left: 1rem;
  }
}

.checkbox > input {
  + label:after {
    .icon-zenicon();
    content: @icon-check;
    border: none;
  }

  &:focus + label:after {color: @color-primary;}
}

.radio > input {
  + label:before {border-radius: 1rem;}

  + label:after {
    width: .8rem;
    height: .8rem;
    background-color: @color-gray;
    border-radius: .4rem;
    border: none;
    left: .5rem;
    top: @padding-small-vertical + 0.6rem;
  }

  &:focus + label:after {background-color: @color-primary;}
}


// Control

.control {
  > label {
    display: block;
    font-weight: bold;
    padding: @padding-small-vertical 0;
  }

  &:not(:last-child) {margin-bottom: @space/2;}
}

.control {
  &.has-label-left,
  &.has-btn-right,
  &.has-icon-right {
    position: relative;
  }

  &.has-label-left {
    > label {
      position: absolute;
      left: .5rem;
      top: .1rem;
      min-width: 2rem;
      text-align: center;
      opacity: .5;
    }

    .input,
    .textarea,
    .select > select {
      padding-left: 2.5rem;

      &:focus + label {
        color: @color-focus;
        opacity: 1;
      }
    }
  }

  &.has-btn-right,
  &.has-icon-right {
    > .icon {
      position: absolute;
      right: .5rem;
      top: .5rem;
      min-width: 2rem;
      text-align: center;
      opacity: .5;
    }

    .input,
    .textarea,
    .select > select {
      padding-right: 2.5rem;

      &:focus + .icon,
      &:focus + label + .icon {
        opacity: 1;
      }
    }
  }

  &.has-btn-right {
    > .btn {
      position: absolute;
      right: 0;
      top: 0;
      min-width: 2rem;
      text-align: center;
      opacity: .5;
    }
  }
}

.row, .column {.control {width: 100%}}


// Control state

.control.has-error {
  .input,
  .textarea,
  .select > select {border-color: @color-danger;}
  .help-text       {color: @color-danger;}
}

.control.has-success {
  .input,
  .textarea,
  .select > select {border-color: @color-success;}
  .help-text       {color: @color-success;}
}

.control.has-warning {
  .input,
  .textarea,
  .select > select {border-color: @color-warning;}
  .help-text       {color: @color-warning;}
}
